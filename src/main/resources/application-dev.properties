env=dev
spring.datasource.url=jdbc:postgresql://localhost:5432/tododb?zeroDateTimeBehavior=convertToNull
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
server.port = 8384

#enable-disbale flyway
spring.jpa.hibernate.ddl-auto=update
spring.flyway.enabled=false


spring.datasource.driver-class-name= org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=logicloud
#spring.datasource.username=root
#spring.datasource.password=root
spring.servlet.multipart.max-file-size=128MB
spring.servlet.multipart.max-request-size=256MB
server.tomcat.max-swallow-size=128MB


spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;
debug=true
spring.thymeleaf.cache = true
logging.level.root.=INFO

# Jwt Configuration
# The secret
jwt.token.secret=15ce7dc-60e2-4409-bcb8-57ad230c9839

# Header token prefix
jwt.token.prefix=Bearer
# The header we are going to use for authentication
jwt.auth.header=Authorization
# After how many hours the token will expire
jwt.expire.hours=864_000_000
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select username, password, active from table_user where username=? and active = true
spring.queries.roles-query=select u.username, r.role from table_user u inner join user_role ur on(u.user_id=ur.user_id) inner join table_role r on(ur.role_id=r.role_id) where u.username=?
